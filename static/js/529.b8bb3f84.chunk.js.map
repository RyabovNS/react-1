{"version":3,"file":"static/js/529.b8bb3f84.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPost/Post.module.css?c8e8","components/Profile/MyPosts/MyPost/Post.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__LE+JT\",\"mainPhoto\":\"ProfileInfo_mainPhoto__UbYDW\",\"contact\":\"ProfileInfo_contact__Zv-O9\"};","// import s from './ProfileInfo.module.css';\r\n// import Preloader from \"../../common/Preloader/Preloader\";\r\nimport React from 'react';\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [status, setStatus] = React.useState(props.status);\r\n\r\n  React.useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>status: </b> <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from './../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Full name</b>:{createField('Full name', 'fullName', Input, [])}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:\r\n        {createField('', 'lookingForAJob', Input, [], { type: 'checkbox' })}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills</b>:\r\n        {createField('My professional skills', 'lookingForAJobDescription', Textarea, [])}\r\n      </div>\r\n      <div>\r\n        <b>About me</b>:{createField('About me', 'aboutMe', Textarea, [])}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{' '}\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <div key={key} className={s.contact}>\r\n              <b>\r\n                {key}: {createField(key, 'contacts.' + key, Input, [])}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n  form: 'edit-profile',\r\n  enableReinitialize: true,\r\n  destroyOnUnmount: false,\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n  let [editMode, setEditMode] = React.useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = e => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = fromData => {\r\n    saveProfile(fromData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt='' />\r\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode ? (\r\n          <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n        ) : (\r\n          <ProfileData\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n          />\r\n        )}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{' '}\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__SKfuP\"};","import s from './Post.module.css';\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://upload.wikimedia.org/wikipedia/commons/7/77/Avatar_cat.png' alt='' />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__ft3VY\",\"posts\":\"MyPosts_posts__l8-VC\"};","import React from 'react';\r\nimport Post from './MyPost/Post';\r\nimport s from './MyPosts.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map(p => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = values => {\r\n    props.AddPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostForm onSubmit={onAddPost} />\r\n        <div className={s.posts}>{postsElements}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name='newPostText'\r\n        component={Textarea}\r\n        validate={[required, maxLength10]}\r\n        placeholder={'Post message'}\r\n      />\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nAddNewPostForm = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return {\r\n    AddPost: newPostText => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = props => {\n  return (\n    <div className={s}>\n      <ProfileInfo\n        profile={props.profile}\n        isOwner={props.isOwner}\n        status={props.status}\n        saveProfile={props.saveProfile}\n        updateStatus={props.updateStatus}\n        savePhoto={props.savePhoto}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from '../../redux/profile-reducer';\r\nimport withRouter from '../common/Legacy/withRouter';\r\nimport Profile from './Profile';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // if (!this.props.isAuth) return <Navigate to='/login'/>\r\n\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.router.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = state => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n"],"names":["props","React","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","enableReinitialize","destroyOnUnmount","handleSubmit","profile","error","onSubmit","className","style","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","alt","target","files","length","initialValues","fromData","then","message","likesCount","MyPosts","postsElements","posts","p","id","AddNewPostForm","values","AddPost","newPostText","maxLength10","maxLengthCreator","Field","name","component","validate","required","placeholder","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}