{"version":3,"file":"static/js/686.4988fbb4.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPost/Post.module.css?c8e8","components/Profile/MyPosts/MyPost/Post.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__LE+JT\"};","// import s from './ProfileInfo.module.css';\r\n// import Preloader from \"../../common/Preloader/Preloader\";\r\nimport React from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = React.useState(false);\r\n    const [status, setStatus] = React.useState(props.status);\r\n\r\n    React.useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__SKfuP\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://upload.wikimedia.org/wikipedia/commons/7/77/Avatar_cat.png\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like</span> {props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__ft3VY\",\"posts\":\"MyPosts_posts__l8-VC\"};","import React from 'react'\r\nimport Post from './MyPost/Post';\r\nimport s from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.AddPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostForm onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"newPostText\"\r\n                   component={Textarea}\r\n                   validate={[required, maxLength10]}\r\n                   placeholder={\"Post message\"}/>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        AddPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"../common/Legacy/withRouter\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.isAuth) return <Navigate to='/login'/>\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","React","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","src","photos","large","Preloader","message","likesCount","MyPosts","postsElements","posts","map","p","AddNewPostForm","onSubmit","values","AddPost","newPostText","maxLength10","maxLengthCreator","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","reduxForm","form","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","compose","auth","id","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}